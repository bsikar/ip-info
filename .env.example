# IP Address Service - Environment Configuration
# Copy this file to .env and customize for your deployment

# ============================================================================
# APPLICATION SETTINGS
# ============================================================================

# Flask environment (development, staging, production)
FLASK_ENV=production

# Secret key for Flask sessions (REQUIRED for production)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-here

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# Host and port for the application server
# CADDY ON SAME SERVER: Use 127.0.0.1 for localhost-only connections
# HOST=127.0.0.1
# PORT=5000

# CADDY ON DIFFERENT SERVER (192.168.x.x): Use 0.0.0.0 to accept network connections
# This is required when Caddy runs on a different server than the Flask app
HOST=0.0.0.0
PORT=5000

# SPECIFIC NETWORK INTERFACE (Alternative): Bind to specific IP
# Replace with your server's actual IP address on the network
# HOST=192.168.1.100
# PORT=5000

# Number of proxy layers (usually 1 for Caddy direct connection)
PROXY_COUNT=1

# Trusted proxy networks (CIDR notation, comma-separated)
# IMPORTANT: Include your Caddy server's IP address/network here
# This ensures proxy headers are trusted from your Caddy server
TRUSTED_PROXIES=127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# If your Caddy server has a specific IP, you can be more restrictive:
# TRUSTED_PROXIES=192.168.1.50/32,127.0.0.1/8
# Replace 192.168.1.50 with your actual Caddy server IP

# ============================================================================
# GUNICORN SETTINGS
# ============================================================================

# Number of worker processes (2 * CPU cores + 1 is a good starting point)
GUNICORN_WORKERS=4

# Worker class (sync for CPU-bound, gevent/eventlet for I/O-bound)
GUNICORN_WORKER_CLASS=sync

# Maximum number of simultaneous clients per worker
GUNICORN_WORKER_CONNECTIONS=1000

# Maximum number of requests a worker will process before restarting
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=100

# Request timeout in seconds
GUNICORN_TIMEOUT=30

# Keep-alive timeout
GUNICORN_KEEPALIVE=5

# Graceful shutdown timeout
GUNICORN_GRACEFUL_TIMEOUT=30

# Enable auto-reload on code changes (development only)
GUNICORN_RELOAD=false

# User and group to run as (if starting as root)
# GUNICORN_USER=www-data
# GUNICORN_GROUP=www-data

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (use absolute path in production)
LOG_FILE=/opt/ip-service/logs/ip_service.log

# Maximum log file size in bytes (10MB default)
LOG_MAX_BYTES=10485760

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# Gunicorn-specific logging
GUNICORN_ACCESS_LOG=/opt/ip-service/logs/access.log
GUNICORN_ERROR_LOG=/opt/ip-service/logs/error.log
GUNICORN_LOG_LEVEL=info

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# Enable rate limiting (true/false)
RATE_LIMIT_ENABLED=false

# Requests per minute per IP (if rate limiting is enabled)
RATE_LIMIT_PER_MINUTE=60

# Forwarded IPs allowed by Gunicorn (* for all, or specific IPs)
GUNICORN_FORWARDED_ALLOW_IPS=*

# Enable proxy protocol (true/false)
GUNICORN_PROXY_PROTOCOL=false

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================

# Worker temporary directory (use RAM disk for better performance)
GUNICORN_WORKER_TMP_DIR=/dev/shm

# ============================================================================
# SSL SETTINGS (if terminating SSL at application level)
# ============================================================================
# Note: With Caddy as reverse proxy, SSL is typically handled by Caddy

# SSL certificate file path
# GUNICORN_CERTFILE=/path/to/certificate.crt

# SSL private key file path
# GUNICORN_KEYFILE=/path/to/private.key

# ============================================================================
# MONITORING AND HEALTH CHECKS
# ============================================================================

# Health check endpoint path (default: /health)
HEALTH_CHECK_PATH=/health

# Enable detailed metrics collection (true/false)
ENABLE_METRICS=false

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================
# Only used when FLASK_ENV=development

# Enable Flask debug mode
FLASK_DEBUG=false

# Enable Flask debug toolbar
FLASK_DEBUG_TOOLBAR=false
